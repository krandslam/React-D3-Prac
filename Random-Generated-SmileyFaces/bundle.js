(function (React$1, ReactDOM, d3) {
  'use strict';

  React$1 = React$1 && Object.prototype.hasOwnProperty.call(React$1, 'default') ? React$1['default'] : React$1;
  ReactDOM = ReactDOM && Object.prototype.hasOwnProperty.call(ReactDOM, 'default') ? ReactDOM['default'] : ReactDOM;

  const BackgroundCircle = ({ radius, strokeWidth}) => (
    React.createElement( 'circle', {
            //cx={centerX}
            //cy={centerY}
            r: radius, fill: "yellow", stroke: "black", 'stroke-width': strokeWidth })
  );

  const Eyes = ({eyeOffsetX, eyeOffsetY, eyeRadius}) => (
    React.createElement( React.Fragment, null, " // combines two circles ", React.createElement( 'circle', { // left eye
            cx: - eyeOffsetX, cy: - eyeOffsetY, r: eyeRadius }),
        React.createElement( 'circle', { // right eye
            cx: + eyeOffsetX, cy: - eyeOffsetY, r: eyeRadius })
      )
  );

  const Mouth = ({mouthRadius, mouthWidth}) => {
    const mouthArc = d3.arc()
      .innerRadius(mouthRadius)
      .outerRadius(mouthRadius + mouthWidth)
      .startAngle(Math.PI / 2)
      .endAngle(Math.PI * 3/2);
    
  	return React.createElement( 'path', { d: mouthArc() });
  };

  const FaceContainer = ({children, width, height, centerX, centerY}) => (
  	React.createElement( 'svg', { width: width, height: height },
      React.createElement( 'g', { transform: `translate(${centerX},${centerY})` }, "// make all the group element to be at the center ", children
      )
    )
  );

  const Face = ({
    width, 
    height, 
    centerX, 
    centerY, 
    strokeWidth, 
    eyeOffsetX, 
    eyeOffsetY, 
    eyeRadius,
    mouthRadius,
    mouthWidth
  }) => (
  	React.createElement( FaceContainer, { 
      width: width, height: height, centerX: centerX, centerY: centerY },
        React.createElement( BackgroundCircle, { 
          radius: centerY - strokeWidth / 2, strokeWidth: strokeWidth }),
        React.createElement( Eyes, { 
          eyeOffsetX: eyeOffsetX, eyeOffsetY: eyeOffsetY, eyeRadius: eyeRadius }),
        React.createElement( Mouth, { 
          mouthRadius: mouthRadius, mouthWidth: mouthWidth })
     )
  );

  const width=160;
  const height=160;

  const array = d3.range(6*3);

  const App = () => array.map(() => (
  	React$1.createElement( Face, {
      width: width, height: height, centerX: width / 2, centerY: height / 2, strokeWidth: 6 + Math.random() * 3, eyeOffsetX: 20 + Math.random() * 9, eyeOffsetY: 20 + Math.random() * 15, eyeRadius: 5 + Math.random() * 10, mouthWidth: 7 + Math.random() * 9, mouthRadius: 30 + Math.random() * 10 })

  ));

  const rootElement = document.getElementById("root");
  ReactDOM.render(React$1.createElement( App, null ), rootElement);

}(React, ReactDOM, d3));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzIjpbIkJhY2tncm91bmRDaXJjbGUuanMiLCJFeWVzLmpzIiwiTW91dGguanMiLCJGYWNlQ29udGFpbmVyLmpzIiwiRmFjZS5qcyIsImluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBCYWNrZ3JvdW5kQ2lyY2xlID0gKHsgcmFkaXVzLCBzdHJva2VXaWR0aH0pID0+IChcbiAgPGNpcmNsZVxuICAgICAgICAgIC8vY3g9e2NlbnRlclh9XG4gICAgICAgICAgLy9jeT17Y2VudGVyWX1cbiAgICAgICAgICByPXtyYWRpdXN9XG4gICAgICAgICAgZmlsbD1cInllbGxvd1wiXG4gICAgICAgICAgc3Ryb2tlPVwiYmxhY2tcIlxuICAgICAgICAgIHN0cm9rZS13aWR0aD17c3Ryb2tlV2lkdGh9XG4gICAgICAgIC8+XG4pOyIsImV4cG9ydCBjb25zdCBFeWVzID0gKHtleWVPZmZzZXRYLCBleWVPZmZzZXRZLCBleWVSYWRpdXN9KSA9PiAoXG4gIDw+IC8vIGNvbWJpbmVzIHR3byBjaXJjbGVzXG5cdFx0XHQ8Y2lyY2xlIC8vIGxlZnQgZXllXG4gICAgICAgICAgY3g9ey8vY2VudGVyWCBcbiAgICAgICAgICAgIC0gZXllT2Zmc2V0WH0gXG4gICAgICAgICAgY3k9ey8vY2VudGVyWSBcbiAgICAgICAgICAgIC0gZXllT2Zmc2V0WX1cbiAgICAgICAgICByPXtleWVSYWRpdXN9XG4gICAgICAgIC8+XG4gICAgICA8Y2lyY2xlIC8vIHJpZ2h0IGV5ZVxuICAgICAgICAgIGN4PXsvL2NlbnRlclggXG4gICAgICAgICAgICArIGV5ZU9mZnNldFh9IFxuICAgICAgICAgIGN5PXsvL2NlbnRlclkgXG4gICAgICAgICAgICAtIGV5ZU9mZnNldFl9XG4gICAgICAgICAgcj17ZXllUmFkaXVzfVxuICAgICAgICAvPlxuICAgIDwvPlxuKTtcbiIsImltcG9ydCB7IGFyYyB9IGZyb20gJ2QzJztcblxuZXhwb3J0IGNvbnN0IE1vdXRoID0gKHttb3V0aFJhZGl1cywgbW91dGhXaWR0aH0pID0+IHtcbiAgY29uc3QgbW91dGhBcmMgPSBhcmMoKVxuICAgIC5pbm5lclJhZGl1cyhtb3V0aFJhZGl1cylcbiAgICAub3V0ZXJSYWRpdXMobW91dGhSYWRpdXMgKyBtb3V0aFdpZHRoKVxuICAgIC5zdGFydEFuZ2xlKE1hdGguUEkgLyAyKVxuICAgIC5lbmRBbmdsZShNYXRoLlBJICogMy8yKTtcbiAgXG5cdHJldHVybiA8cGF0aCBkPXttb3V0aEFyYygpfS8+O1xufTsiLCJleHBvcnQgY29uc3QgRmFjZUNvbnRhaW5lciA9ICh7Y2hpbGRyZW4sIHdpZHRoLCBoZWlnaHQsIGNlbnRlclgsIGNlbnRlcll9KSA9PiAoXG5cdDxzdmcgd2lkdGg9e3dpZHRofSBoZWlnaHQ9e2hlaWdodH0+XG4gICAgPGcgdHJhbnNmb3JtPXtgdHJhbnNsYXRlKCR7Y2VudGVyWH0sJHtjZW50ZXJZfSlgfT5cbiAgICAgICAvLyBtYWtlIGFsbCB0aGUgZ3JvdXAgZWxlbWVudCB0byBiZSBhdCB0aGUgY2VudGVyXG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9nPlxuICA8L3N2Zz5cbik7IiwiaW1wb3J0IHsgQmFja2dyb3VuZENpcmNsZSB9IGZyb20gJy4vQmFja2dyb3VuZENpcmNsZSc7XG5pbXBvcnQgeyBFeWVzIH0gZnJvbSAnLi9FeWVzJztcbmltcG9ydCB7IE1vdXRoIH0gZnJvbSAnLi9Nb3V0aCc7XG5pbXBvcnQgeyBGYWNlQ29udGFpbmVyIH0gZnJvbSAnLi9GYWNlQ29udGFpbmVyJztcblxuZXhwb3J0IGNvbnN0IEZhY2UgPSAoe1xuICB3aWR0aCwgXG4gIGhlaWdodCwgXG4gIGNlbnRlclgsIFxuICBjZW50ZXJZLCBcbiAgc3Ryb2tlV2lkdGgsIFxuICBleWVPZmZzZXRYLCBcbiAgZXllT2Zmc2V0WSwgXG4gIGV5ZVJhZGl1cyxcbiAgbW91dGhSYWRpdXMsXG4gIG1vdXRoV2lkdGhcbn0pID0+IChcblx0PEZhY2VDb250YWluZXIgXG4gICAgd2lkdGggPSB7d2lkdGh9XG4gICAgaGVpZ2h0PXtoZWlnaHR9XG4gICAgY2VudGVyWD17Y2VudGVyWH1cbiAgICBjZW50ZXJZPXtjZW50ZXJZfVxuICA+XG4gICAgICA8QmFja2dyb3VuZENpcmNsZSBcbiAgICAgICAgcmFkaXVzPXtjZW50ZXJZIC0gc3Ryb2tlV2lkdGggLyAyfSBcbiAgICAgICAgc3Ryb2tlV2lkdGggPSB7c3Ryb2tlV2lkdGh9XG4gICAgICAvPlxuICAgICAgPEV5ZXMgXG4gICAgICAgIGV5ZU9mZnNldFggPSB7ZXllT2Zmc2V0WH0gXG4gICAgICAgIGV5ZU9mZnNldFkgPSB7ZXllT2Zmc2V0WX0gXG4gICAgICAgIGV5ZVJhZGl1cyA9IHtleWVSYWRpdXN9XG4gICAgICAvPlxuICAgICAgPE1vdXRoIFxuICAgICAgICBtb3V0aFJhZGl1cyA9IHttb3V0aFJhZGl1c30gXG4gICAgICAgIG1vdXRoV2lkdGggPSB7bW91dGhXaWR0aH1cbiAgICAgIC8+XG4gICA8L0ZhY2VDb250YWluZXI+XG4pOyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUmVhY3RET00gZnJvbSAncmVhY3QtZG9tJztcbmltcG9ydCB7IHJhbmdlIH0gZnJvbSAnZDMnO1xuaW1wb3J0IHsgRmFjZSB9IGZyb20gJy4vRmFjZSc7XG5cbmNvbnN0IHdpZHRoPTE2MDtcbmNvbnN0IGhlaWdodD0xNjA7XG5cbmNvbnN0IGFycmF5ID0gcmFuZ2UoNiozKTtcblxuY29uc3QgQXBwID0gKCkgPT4gYXJyYXkubWFwKCgpID0+IChcblx0PEZhY2VcbiAgICB3aWR0aCA9IHt3aWR0aH1cbiAgICBoZWlnaHQ9e2hlaWdodH1cbiAgICBjZW50ZXJYID0ge3dpZHRoIC8gMn1cbiAgICBjZW50ZXJZID0ge2hlaWdodCAvIDJ9XG4gICAgc3Ryb2tlV2lkdGggPSB7NiArIE1hdGgucmFuZG9tKCkgKiAzfVxuICAgIGV5ZU9mZnNldFggPSB7MjAgKyBNYXRoLnJhbmRvbSgpICogOX1cbiAgICBleWVPZmZzZXRZID0gezIwICsgTWF0aC5yYW5kb20oKSAqIDE1fVxuICAgIGV5ZVJhZGl1cyA9IHs1ICsgTWF0aC5yYW5kb20oKSAqIDEwfVxuICAgIG1vdXRoV2lkdGggPSB7NyArIE1hdGgucmFuZG9tKCkgKiA5fVxuICAgIG1vdXRoUmFkaXVzID0gezMwICsgTWF0aC5yYW5kb20oKSAqIDEwfVxuICAgIC8vIE1hdGgucmFuZG9tKCk6IHJhbmRvbSBudW1iZXIgMH4xXG4vPlxuXG4pKTtcblxuY29uc3Qgcm9vdEVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInJvb3RcIik7XG5SZWFjdERPTS5yZW5kZXIoPEFwcCAvPiwgcm9vdEVsZW1lbnQpOyJdLCJuYW1lcyI6WyJhcmMiLCJyYW5nZSIsIlJlYWN0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7RUFBTyxNQUFNLGdCQUFnQixHQUFHLENBQUMsRUFBRSxNQUFNLEVBQUUsV0FBVyxDQUFDO0VBQ3ZELEVBQUU7RUFDRjtFQUNBO0VBQ0EsVUFBVSxHQUFHLE1BQU8sRUFDVixNQUFLLFFBQVEsRUFDYixRQUFPLE9BQU8sRUFDZCxnQkFBYyxhQUFZLENBQzFCO0VBQ1YsQ0FBQzs7RUNUTSxNQUFNLElBQUksR0FBRyxDQUFDLENBQUMsVUFBVSxFQUFFLFVBQVUsRUFBRSxTQUFTLENBQUM7RUFDeEQsRUFBRSwyQ0FBRSw2QkFDRDtFQUNILFVBQVUsSUFDRSxFQUFFLFVBQVcsRUFDZixJQUNFLEVBQUUsVUFBVyxFQUNmLEdBQUcsV0FBVTtFQUV2QixNQUFNO0VBQ04sVUFBVSxJQUNFLEVBQUUsVUFBVyxFQUNmLElBQ0UsRUFBRSxVQUFXLEVBQ2YsR0FBRyxXQUFVLENBQ2I7RUFDVixLQUFPO0VBQ1AsQ0FBQzs7RUNmTSxNQUFNLEtBQUssR0FBRyxDQUFDLENBQUMsV0FBVyxFQUFFLFVBQVUsQ0FBQyxLQUFLO0VBQ3BELEVBQUUsTUFBTSxRQUFRLEdBQUdBLE1BQUcsRUFBRTtFQUN4QixLQUFLLFdBQVcsQ0FBQyxXQUFXLENBQUM7RUFDN0IsS0FBSyxXQUFXLENBQUMsV0FBVyxHQUFH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